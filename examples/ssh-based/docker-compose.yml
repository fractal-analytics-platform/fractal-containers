services:

  db:
    cpus: 1.0
    mem_limit: "1G"
    container_name: fractal-db
    image: postgres:15.4-alpine
    restart: always
    ports:
      - 5433:5433
    command: -p 5433
    environment:
      POSTGRES_USER: fractal
      POSTGRES_PASSWORD: fractal
      POSTGRES_DB: fractal
      # required for the check below - otherwise postgresql
      # will use undefined 'root' user and raise errors
      PGUSER: fractal
    healthcheck:
      # postgresql starts up, stops, and then restarts
      # => errors if the server connects before the stop
      # this checks if the system is ready
      test: pg_isready -p 5433
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - fractal

  slurm:
    hostname: slurm
    container_name: slurm
    cpus: 3.0
    mem_limit: 5g
    build:
      context: ./slurm_cluster
      dockerfile: Dockerfile
      args:
        - FRACTAL_SERVER_GIT=
        - FRACTAL_SERVER_RELEASE=2.14.3a0
        - SLURM_CPUS=3
        - SLURM_MEMORY=3000
    volumes:
      - data:/data
    healthcheck:
      test: squeue
      interval: 4s
      timeout: 2s
      retries: 5
    environment:
      - SLURM_CPUS_ON_NODE=1
    ports:
      - 22:22
      - 6817:6817
      - 6818:6818
    networks:
      - fractal

  server:
    hostname: server
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - FRACTAL_SERVER_GIT=
        - FRACTAL_SERVER_RELEASE=2.14.3a0
    depends_on:
      db:
        condition: service_healthy
      slurm:
        condition: service_healthy
    volumes:
      - data:/data
    ports:
      - 8000:8000
    healthcheck:
      test: wget http://server:8000/api/alive/ > /dev/null 2>&1
      interval: 4s
      timeout: 2s
      retries: 5
    networks:
      - fractal

  web:
    container_name: fractal-web
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - FRACTAL_WEB_VERSION=1.17.4
    ports:
      - 5173:5173
    networks:
      - fractal

  server-config:
    container_name: server-config
    build:
      context: ./server-config
      args:
        - FRACTAL_CLIENT_VERSION=2.8.0
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - data:/data
    networks:
      - fractal

volumes:
  data:
  postgres_db:

networks:
  fractal:
    driver: bridge
